{"version":3,"file":"static/js/783.ab09931a.chunk.js","mappings":"0PAEaA,EAAaC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uDAKtBC,EAAaH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sDAKvBG,EAAYL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,oEAMtBK,EAAQP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kCAIhBO,EAAWT,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,iCAIpBS,EAAcX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,kCAItBW,EAAab,EAAAA,GAAAA,GAASc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yK,SCgDnC,EAlEqB,WAAO,IAADa,EAAAC,EACzBC,GAAkCC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACtBI,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAA2B,QAArBb,EAAe,QAAfC,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,WAqB3D,OAnBAgB,EAAAA,EAAAA,YAAU,WASRC,MAAM,sCAADC,OACmCV,EAAO,mBAT/B,CACdW,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAOHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAC,GACJjB,EAAaiB,EACf,IACCE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAI,GACpC,GAAG,CAACnB,KAEFsB,EAAAA,EAAAA,MAACxC,EAAS,CAAAyC,SAAA,EACRD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAChD,EAAU,CAAA+C,SAAEzB,EAAU2B,kBACvBD,EAAAA,EAAAA,KAAC5C,EAAU,CACT8C,UAAU,iBACVC,IACE7B,EAAU8B,aAAW,kCAAAlB,OACaZ,EAAU8B,aAE9CC,IAAK/B,EAAUgC,MAAQhC,EAAUgC,MAAQhC,EAAUiC,QAErDP,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAI7B,EAAoB8B,QAAQX,SAAC,4BAEzCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACtC,EAAK,CAAAuC,SAAA,CAAC,gBAAczB,EAAUqC,iBAC/BX,EAAAA,EAAAA,KAACtC,EAAQ,CAAAqC,SAAC,cACVC,EAAAA,EAAAA,KAACpC,EAAW,CAAAmC,SAAEzB,EAAUsC,YACxBZ,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACHzB,EAAUuC,SACTb,EAAAA,EAAAA,KAAClC,EAAU,CAAAiC,SACRzB,EAAUuC,OAAOC,KAAI,SAAAC,GAAK,OACzBf,EAAAA,EAAAA,KAAA,MAAAD,SAAoBgB,EAAMR,MAAjBQ,EAAMC,GAAqB,OAI1ChB,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJD,EAAAA,EAAAA,MAAChC,EAAU,CAAAiC,SAAA,EACTC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAG,OAAMV,SAAC,YAElBC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAG,UAASV,SAAC,kBAGvBC,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,SAIf,C","sources":["components/ChoosenMovie/ChoosenMovie.styled.js","components/ChoosenMovie/ChoosenMovie.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieTitle = styled.h2`\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieImage = styled.img`\n  padding: 1px;\n  border: 1px solid grey;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 30px;\n  align-items: baseline;\n`;\n\nexport const Score = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const Overwiew = styled.h3`\n  margin-bottom: 5px;\n`;\n\nexport const Description = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  gap: 10px;\n\n  a {\n    color: black;\n    transition: color 0.3s ease;\n  }\n  a:hover {\n    color: #18b6ea;\n  }\n`;\n","import { useState, useEffect, useRef } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport {\n  Score,\n  MovieTitle,\n  MovieImage,\n  Container,\n  Overwiew,\n  Description,\n  GenresList,\n} from './ChoosenMovie.styled';\n\nconst ChoosenMovie = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZDVhMmVmOTBkZWY1YzMzZDRhMzFkMGRhMDViMDE1MCIsInN1YiI6IjY0ZjBiYjU5Y2FhNTA4MDEwYWU2YWUyMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.68fXrEUL_FZnMg6SyMTGJwfTB01TSdh9bAAu1u2Pz14',\n      },\n    };\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n      options\n    )\n      .then(response => response.json())\n      .then(response => {\n        setMovieInfo(response);\n      })\n      .catch(err => console.error(err));\n  }, [movieId]);\n  return (\n    <Container>\n      <div>\n        <MovieTitle>{movieInfo.original_title}</MovieTitle>\n        <MovieImage\n          className=\"choosenbookimg\"\n          src={\n            movieInfo.poster_path &&\n            `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n          }\n          alt={movieInfo.title ? movieInfo.title : movieInfo.name}\n        />\n        <Link to={backLinkLocationRef.current}>Back to search page</Link>\n      </div>\n      <div>\n        <Score>Users score: {movieInfo.vote_average}</Score>\n        <Overwiew>Overview</Overwiew>\n        <Description>{movieInfo.overview}</Description>\n        <h3>Genres</h3>\n        {movieInfo.genres && (\n          <GenresList>\n            {movieInfo.genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </GenresList>\n        )}\n        <h3>Additional information</h3>\n        <GenresList>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </GenresList>\n        <Outlet />\n      </div>\n    </Container>\n  );\n};\n\nexport default ChoosenMovie;\n"],"names":["MovieTitle","styled","_templateObject","_taggedTemplateLiteral","MovieImage","_templateObject2","Container","_templateObject3","Score","_templateObject4","Overwiew","_templateObject5","Description","_templateObject6","GenresList","_templateObject7","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetch","concat","method","headers","accept","Authorization","then","response","json","catch","err","console","error","_jsxs","children","_jsx","original_title","className","src","poster_path","alt","title","name","Link","to","current","vote_average","overview","genres","map","genre","id","Outlet"],"sourceRoot":""}